//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PassGen.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "8.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>Universal</string>
  <string>CZ</string>
  <string>DA</string>
  <string>DE</string>
  <string>HU</string>
  <string>US</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection Keyboards {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["Keyboards"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>!?.,:;_-+=*/""'%()</string>
  <string>˚;+ĚěŠšČčŘřŽžÝýÁáÍíÉé%=ˇ´'""/Úú()¨Ůů!§?,:._-*+</string>
  <string>§½!""@#£¤$%&amp;/{([)]=}?+`´|€åÅ^¨~æÆøØ*'&lt;&gt;\μ;,:._-</string>
  <string>°^!""²§³$%&amp;/{([)]=}?ß\`´@€Üü*+~ÖöÄä'#&lt;&gt;|μ;,:._-</string>
  <string>§'""+!%/=()ÖöÜüÓó\|€Őő÷Úú×[]Éé$ÁáŰűÍí&lt;&gt;#&amp;@{}?,;:._-*</string>
  <string>`~!@#$%^&amp;*()-_=+[{]}\|;:'"",&lt;.&gt;/?</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection KeyboardSpecialCharacters {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["KeyboardSpecialCharacters"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("abcdefghijklmnopqrstuvwxyz")]
        public string Letters {
            get {
                return ((string)(this["Letters"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ABCDEFGHIJKLMNOPQRSTUVWXYZ")]
        public string Capitals {
            get {
                return ((string)(this["Capitals"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0123456789")]
        public string Numerals {
            get {
                return ((string)(this["Numerals"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("23456789")]
        public string SafeNumerals {
            get {
                return ((string)(this["SafeNumerals"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
            "1234567890123456789")]
        public string LengthTestString {
            get {
                return ((string)(this["LengthTestString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>thousand</string>
  <string>million</string>
  <string>billion</string>
  <string>trillion</string>
  <string>quadrillion</string>
  <string>quintillion</string>
  <string>sextillion</string>
  <string>septillion</string>
  <string>octillion</string>
  <string>nonillion</string>
  <string>decillion</string>
  <string>undecillion</string>
  <string>duodecillion</string>
  <string>tredecillion</string>
  <string>quattuordecillion</string>
  <string>quindecillion</string>
  <string>sexdecillion</string>
  <string>septendecillion</string>
  <string>octodecillion</string>
  <string>novemdecillion</string>
  <string>vigintillion</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection NumberNames {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["NumberNames"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("zero")]
        public string ZeroName {
            get {
                return ((string)(this["ZeroName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("an unfathomable number (more than I care to compute) of")]
        public string InifinityName {
            get {
                return ((string)(this["InifinityName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(" (ten to the power of {0:D})")]
        public string PowerFormat {
            get {
                return ((string)(this["PowerFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{0,3:F} ")]
        public string NumberFormat {
            get {
                return ((string)(this["NumberFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("###,###")]
        public string SmallNumberFormat {
            get {
                return ((string)(this["SmallNumberFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Numbers")]
        public string chkNumbersStart {
            get {
                return ((string)(this["chkNumbersStart"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0-9")]
        public string NumeralsName {
            get {
                return ((string)(this["NumeralsName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2-9")]
        public string SafeNumeralsName {
            get {
                return ((string)(this["SafeNumeralsName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("This password is one of {0} possible combinations.")]
        public string txtPasswordTooltipFormat {
            get {
                return ((string)(this["txtPasswordTooltipFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{0,3:D} Characters")]
        public string lblPasswordCharCountFormat {
            get {
                return ((string)(this["lblPasswordCharCountFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Clipboard: ")]
        public string lblStatusStart {
            get {
                return ((string)(this["lblStatusStart"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The number of password characters generated.")]
        public string lblPasswordCharCountTooltip {
            get {
                return ((string)(this["lblPasswordCharCountTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Specific: ")]
        public string chkSpecificText {
            get {
                return ((string)(this["chkSpecificText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Specify a specific set of special characters to allow.")]
        public string chkSpecificTooltip {
            get {
                return ((string)(this["chkSpecificTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Special Characters")]
        public string chkSpecialCharsText {
            get {
                return ((string)(this["chkSpecialCharsText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Allow passwords to contain other special characters.\r\nDefault is a universal set " +
            "found in most keyboard layouts.")]
        public string chkSpecialCharsTooltip {
            get {
                return ((string)(this["chkSpecialCharsTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Spaces")]
        public string chkSpacesText {
            get {
                return ((string)(this["chkSpacesText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Allow passwords to contain spaces.")]
        public string chkSpacesTooltip {
            get {
                return ((string)(this["chkSpacesTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Uppercase")]
        public string chkUppercaseText {
            get {
                return ((string)(this["chkUppercaseText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Allow passwords to contain uppercase characters.")]
        public string chkUppercaseTooltip {
            get {
                return ((string)(this["chkUppercaseTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Allow passwords to contain numerals, including or excluding zero and one.")]
        public string chkNumbersTooltip {
            get {
                return ((string)(this["chkNumbersTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Move slider to change password length.")]
        public string trkLengthTooltip {
            get {
                return ((string)(this["trkLengthTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Generate")]
        public string btnGenerateText {
            get {
                return ((string)(this["btnGenerateText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Generate a different password.")]
        public string btnGenerateTooltip {
            get {
                return ((string)(this["btnGenerateTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Copy")]
        public string btnCopyText {
            get {
                return ((string)(this["btnCopyText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Copy current password to clipboard.")]
        public string btnCopyTooltip {
            get {
                return ((string)(this["btnCopyTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("+")]
        public string btnGenerateCopyText {
            get {
                return ((string)(this["btnGenerateCopyText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Generate a new password and copy it to clipboard.")]
        public string btnGenerateCopyTooltip {
            get {
                return ((string)(this["btnGenerateCopyTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select the special character set to allow.")]
        public string cboSpecificTooltip {
            get {
                return ((string)(this["cboSpecificTooltip"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\" \"")]
        public string Whitespace {
            get {
                return ((string)(this["Whitespace"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Universal")]
        public string cboSpecificText {
            get {
                return ((string)(this["cboSpecificText"]));
            }
            set {
                this["cboSpecificText"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("password")]
        public string txtPasswordText {
            get {
                return ((string)(this["txtPasswordText"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8")]
        public int PasswordLength {
            get {
                return ((int)(this["PasswordLength"]));
            }
            set {
                this["PasswordLength"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 100")]
        public global::System.Drawing.Point Location {
            get {
                return ((global::System.Drawing.Point)(this["Location"]));
            }
            set {
                this["Location"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("385, 165")]
        public global::System.Drawing.Size Size {
            get {
                return ((global::System.Drawing.Size)(this["Size"]));
            }
            set {
                this["Size"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Checked")]
        public global::System.Windows.Forms.CheckState chkUppercaseCheckState {
            get {
                return ((global::System.Windows.Forms.CheckState)(this["chkUppercaseCheckState"]));
            }
            set {
                this["chkUppercaseCheckState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Indeterminate")]
        public global::System.Windows.Forms.CheckState chkNumbersCheckState {
            get {
                return ((global::System.Windows.Forms.CheckState)(this["chkNumbersCheckState"]));
            }
            set {
                this["chkNumbersCheckState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Unchecked")]
        public global::System.Windows.Forms.CheckState chkSpacesCheckState {
            get {
                return ((global::System.Windows.Forms.CheckState)(this["chkSpacesCheckState"]));
            }
            set {
                this["chkSpacesCheckState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Unchecked")]
        public global::System.Windows.Forms.CheckState chkSpecialCharsCheckState {
            get {
                return ((global::System.Windows.Forms.CheckState)(this["chkSpecialCharsCheckState"]));
            }
            set {
                this["chkSpecialCharsCheckState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Unchecked")]
        public global::System.Windows.Forms.CheckState chkSpecificCheckState {
            get {
                return ((global::System.Windows.Forms.CheckState)(this["chkSpecificCheckState"]));
            }
            set {
                this["chkSpecificCheckState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("286, 35")]
        public global::System.Drawing.Size trkLengthSize {
            get {
                return ((global::System.Drawing.Size)(this["trkLengthSize"]));
            }
            set {
                this["trkLengthSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("265, 20")]
        public global::System.Drawing.Size txtPasswordSize {
            get {
                return ((global::System.Drawing.Size)(this["txtPasswordSize"]));
            }
            set {
                this["txtPasswordSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool chkSpecificEnabled {
            get {
                return ((bool)(this["chkSpecificEnabled"]));
            }
            set {
                this["chkSpecificEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool cboSpecificEnabled {
            get {
                return ((bool)(this["cboSpecificEnabled"]));
            }
            set {
                this["cboSpecificEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("177, 21")]
        public global::System.Drawing.Size cboSpecificSize {
            get {
                return ((global::System.Drawing.Size)(this["cboSpecificSize"]));
            }
            set {
                this["cboSpecificSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("283, 57")]
        public global::System.Drawing.Point btnGenerateLocation {
            get {
                return ((global::System.Drawing.Point)(this["btnGenerateLocation"]));
            }
            set {
                this["btnGenerateLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("283, 77")]
        public global::System.Drawing.Point btnCopyLocation {
            get {
                return ((global::System.Drawing.Point)(this["btnCopyLocation"]));
            }
            set {
                this["btnCopyLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("347, 57")]
        public global::System.Drawing.Point btnGenerateCopyLocation {
            get {
                return ((global::System.Drawing.Point)(this["btnGenerateCopyLocation"]));
            }
            set {
                this["btnGenerateCopyLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Numbers 2-9")]
        public string chkNumbersText {
            get {
                return ((string)(this["chkNumbersText"]));
            }
            set {
                this["chkNumbersText"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 8.25pt")]
        public global::System.Drawing.Font txtPasswordFont {
            get {
                return ((global::System.Drawing.Font)(this["txtPasswordFont"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("minus ")]
        public string NegativePrefix {
            get {
                return ((string)(this["NegativePrefix"]));
            }
        }
    }
}
